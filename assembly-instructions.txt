// 0000 – 0x0xxx Instructions
0000 0000 00mm mddd MOVS Rddd, Rmmm ; Rddd = Rmmm
0000 0iii iimm mddd LSLS Rddd, Rmmm, #0biiiii ; Rddd = Rmmm LSL #0b0iiiii
0000 1iii iimm mddd LSRS Rddd, Rmmm, #0biiiii ; Rddd = Rmmm LSR #0b0iiiii

// 0001 – 0x1xxx Instructions
0001 0iii iimm mddd ASRS Rddd, Rmmm, #0biiiii ; Rddd = Rmmm ASR #0b0iiiii
0001 100m mmnn nddd ADDS Rddd, Rnnn, Rmmm ; Rddd = Rnnn + Rmmm
0001 101m mmnn nddd SUBS Rddd, Rnnn, Rmmm ; Rddd = Rnnn - Rmmm
0001 110i iinn nddd ADDS Rddd, Rnnn, #0biii ; Rddd = Rnnn + #0b0iii
0001 111i iinn nddd SUBS Rddd, Rnnn, #0biii ; Rddd = Rnnn - #0b0iii

// 0010 – 0x2xxx Instructions
0010 0ddd iiii iiii MOVS Rddd, #0biiiiiiii ; Rddd = #0b0iiiiiiii
0010 1nnn iiii iiii CMP Rnnn, #0biiiiiiii ; flags = Rnnn - #0b0iiiiiiii

// 0011 – 0x3xxx Instructions
0011 0ddd iiii iiii ADDS Rddd, #0biiiiiiii ; Rddd = Rddd + #0b0iiiiiiii
0011 1ddd iiii iiii SUBS Rddd, #0biiiiiiii ; Rddd = Rddd - #0b0iiiiiiii

// 0100 – 0x4xxx Instructions
0100 0000 00mm mddd ANDS Rddd, Rmmm ; Rddd = Rddd & Rmmm
0100 0000 01mm mddd EORS Rddd, Rmmm ; Rddd = Rddd ^ Rmmm
0100 0000 10mm mddd LSLS Rddd, Rmmm ; Rddd = Rddd LSL Rmmm
0100 0000 11mm mddd LSRS Rddd, Rmmm ; Rddd = Rddd LSR Rmmm
0100 0001 00mm mddd ASRS Rddd, Rmmm ; Rddd = Rddd ASR Rmmm
0100 0001 01mm mddd ADCS Rddd, Rmmm ; Rddd = Rddd + Rmmm + carry
0100 0001 10mm mddd SBCS Rddd, Rmmm ; Rddd = Rddd - Rmmm - ~carry
0100 0001 11mm mddd RORS Rddd, Rmmm ; Rddd = Rddd ROR Rmmm
0100 0010 00mm mddd TST Rddd, Rmmm ; flags : Rddd & Rmmm
0100 0010 01mm mddd RSBS Rddd, Rmmm, #0 ; Rddd = 0 - Rmmm --> alias for NEGS Rddd, Rmmm
0100 0010 10mm mnnn CMP Rnnn, Rmmm ; flags : Rnnn - Rmmm
0100 0010 11mm mnnn CMN Rnnn, Rmmm ; flags : Rnnn + Rmmm
0100 0011 00mm mddd ORRS Rddd, Rmmm ; Rddd = Rddd | Rmmm
0100 0011 01mm mddd MULS Rddd, Rmmm, Rddd ; Rddd = Rddd * Rmmm
0100 0011 10mm mddd BICS Rddd, Rmmm ; Rddd = Rddd & ~Rmmm --> bit clear
0100 0011 11mm mddd MVNS Rddd, Rmmm ; Rddd = ~Rmmm
0100 0100 dmmm mddd ADD Rdddd, Rmmmm ; Rdddd = Rdddd + Rmmmm
0100 0101 nmmm mnnn CMP Rnnnn, Rmmmm ; flags : Rnnnn - Rmmmm
0100 0110 dmmm mddd MOV Rdddd, Rmmmm ; Rdddd = Rmmmm
0100 0111 1mmm m... BLX Rmmmm ; LR = IPC+2,PC=Rmmmm (mmmm==0b1111: unpredictable)
0100 1ttt iiii iiii LDR Rttt, [PC, #off] ; Rttt = [((IPC+4)&~0b011)+0b0iiiiiiii00] --> +1020 max
                    LDR Rttt, label ; --> the assembler calculates the above from the label
                    LDR Rttt, =lab ; --> pseudo instruction: the assembler stores the lab/lit
                    LDR Rttt, =lit ; in litpool, access PC relative with LDR Rttt,litpool

// 0101 – 0x5xxx Instructions
0101 000m mmnn nttt STR Rttt, [Rnnn, Rmmm] ; [Rnnn + Rmmm] = Rttt
0101 001m mmnn nttt STRH Rttt, [Rnnn, Rmmm] ; [Rnnn + Rmmm] = Rttt --> low half
0101 010m mmnn nttt STRB Rttt, [Rnnn, Rmmm] ; [Rnnn + Rmmm] = Rttt --> low byte
0101 011m mmnn nttt LDRSB Rttt, [Rnnn, Rmmm] ; Rttt<sss1> = [Rnnn + Rmmm]<1> --> low byte
0101 100m mmnn nttt LDR Rttt, [Rnnn, Rmmm] ; Rttt = [Rnnn + Rmmm]
0101 101m mmnn nttt LDRH Rttt, [Rnnn, Rmmm] ; Rttt<0021> = [Rnnn + Rmmm]<21> --> low half
0101 110m mmnn nttt LDRB Rttt, [Rnnn, Rmmm] ; Rttt<0001> = [Rnnn + Rmmm]<1> --> low byte
0101 111m mmnn nttt LDRSH Rttt, [Rnnn, Rmmm] ; Rttt<ss21> = [Rnnn + Rmmm]<21> --> low half

// 0110 – 0x6xxx Instructions
0110 0iii iinn nttt STR Rttt, [Rnnn, #off] ; [Rnnn + 0b0iiiii00] = Rttt --> +124 max
0110 1iii iinn nttt LDR Rttt, [Rnnn, #off] ; Rttt = [Rnnn + 0x0iiiii00] --> +124 max

// 0111 – 0x7xxx Instructions
0111 0iii iinn nttt STRB Rttt, [Rnnn, #off] ; [Rnnn + 0b0iiiii] = Rttt --> +31 max, low byte
0111 1iii iinn nttt LDRB Rttt, [Rnnn, #off] ; Rttt<0001> = [Rnnn + 0x0iiiii]<1> --> +31 max, low byte

// 1000 – 0x8xxx Instructions
1000 0iii iinn nttt STRH Rttt, [Rnnn, #off] ; [Rnnn + 0x0iiiii0] = Rttt --> +62 max, low half
1000 1iii iinn nttt LDRH Rttt, [Rnnn, #off] ; Rttt<0021> = [Rnnn + 0x0iiiii0]<21> --> +62 max, low half

// 1001 – 0x9xxx Instructions
1001 0ttt iiii iiii STR Rttt, [SP, #off] ; [SP + 0b0iiiiiiii00] = Rttt --> +1020 max
1001 1ttt iiii iiii LDR Rttt, [SP, #off] ; Rttt = [SP + 0b0iiiiiiii00] --> +1020 max
